# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7.14

    working_directory: ~/repo

    environment:
      SQLALCHEMY_DATABASE_URI_PROD: 'mysql://user:password@localhost/notejam'

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "flask/requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo pip install --upgrade pip setuptools
            sudo pip install -r flask/requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "flask/requirements.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            python flask/tests.py

      - run:
          name: generate deployment artifacts
          command: |
            sed -i "s%__SQLALCHEMY_DATABASE_URI_CI_CHANGE_VAR__%$SQLALCHEMY_DATABASE_URI_PROD%" ./flask/notejam/config.py
            tar czfv notejam-flask.tgz --exclude='*.pyc' --exclude='*.db' --recursion flask

      - store_artifacts:
          path: notejam-flask.tgz
          destination: notejam-flask.tgz

  deployment:

    docker:
      - image: circleci/python:2.7.14

    working_directory: Ëœ/repo

    steps:

      - run:
          name: Install aws cli
          command:
              sudo pip install awscli

      - run:
          name: deploy package to AWS S3 and CodeDeploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "test-codedeploy" ]; then

              aws s3 cp notejam-flask.tgz s3://frmaia-notejam/prod/notejam-flask-latest.tgz
              aws deploy push --source ./ --application-name notejam --s3-location s3://frmaia-notejam/prod/notejam-flask-latest.tgz --region us-east-1 --ignore-hidden-files

            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then

              aws s3 cp notejam-flask.tgz s3://frmaia-notejam/staging/notejam-flask-latest.tgz

            fi
          #command: aws deploy push --source ./ --application-name notejam --s3-location s3://frmaia-notejam/prod/notejam-flask-latest.tgz --region us-east-1 --ignore-hidden-files
          #command: aws deploy create-deployment --application-name notejam --s3-location bucket=frmaia-notejam,key=notejam-flask-latest.zip,bundleType=zip,eTag=5f5da598211ce072d861c50d9594a1df --deployment-group-name notejam-group --deployment-config-name CodeDeployDefault.OneAtATime --description "Deploying latest builded version."


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deployment:
          requires:
            - build
          filters:
            branches:
              only: test-codedeploy
