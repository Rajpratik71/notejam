version: 0.2

phases:
  install:
    commands:
      - echo '#!/bin/bash' > /usr/local/bin/ok
      - echo 'if [[ "$CODEBUILD_BUILD_SUCCEEDING" == "0" ]]; then exit 1; else exit 0; fi' >> /usr/local/bin/ok
      - chmod +x /usr/local/bin/ok
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - IMAGE_NAME=notejam
      - REPOSITORY_URI=620019462105.dkr.ecr.us-west-2.amazonaws.com/$IMAGE_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest rubyonrails/$IMAGE_NAME
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Running tests...
      - docker run --entrypoint bash $REPOSITORY_URI:latest -c 'RAILS_ENV=test rake db:setup && rake test'
      - echo Tests completed
      - ok && echo Tests Succeeded || echo Tests Failed
      - echo Build completed on `date`
  post_build:
    commands:
      - ok && echo Pushing the Docker images...
      - ok && docker push $REPOSITORY_URI:latest
      - ok && docker push $REPOSITORY_URI:$IMAGE_TAG
      - ok && echo Writing image definitions file...
      - ok && printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json
